def max_circular_subarray_sum(nums):
    def kadane(arr):
        max_ending_here = max_so_far = arr[0]
        for x in arr[1:]:
            max_ending_here = max(x, max_ending_here + x)
            max_so_far = max(max_so_far, max_ending_here)
        return max_so_far
    max_kadane = kadane(nums)
    total_sum = sum(nums)
    inverted_nums = [-x for x in nums]
    max_wrap = total_sum + kadane(inverted_nums)
    return max(max_kadane, max_wrap)
nums = [1, -2, 3, -2]
result = max_circular_subarray_sum(nums)
print(result)  # Output: 3
